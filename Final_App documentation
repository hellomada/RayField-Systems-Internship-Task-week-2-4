Project Overview

The Rayfield Systems Energy AI Dashboard is a Python/Streamlit application for monitoring and predicting AC power output, detecting anomalies, and providing actionable insights using AI and GPT.

It is designed for energy analysts, facility managers, and engineers to quickly visualize performance, detect abnormal readings, and get AI-driven recommendations.

Features

Upload CSV data with required columns:
['date','hour','dc_power','daily_yield','total_yield','ac_power']

Ensemble Regression Model: Predicts AC power using multiple regressors

Anomaly Detection: Isolation Forest with adjustable contamination

Interactive Visualization:

Actual vs predicted AC power

Red markers highlight anomalies

GPT Actionable Insights:

Summary of anomalies

Highlights unusual patterns

Suggests recommended actions

Downloadable Anomaly CSV: For integration with Zapier or other platforms

Demo Mode: Built-in CSV for instant testing

Ngrok Integration: For temporary live sharing

Requirements

Python >= 3.9

Packages:

pip install streamlit pyngrok scikit-learn matplotlib pandas joblib openai


OpenAI API key (v1.0.0 or higher client)
Set as environment variable:

export OPENAI_API_KEY="your_openai_api_key_here"


Or update directly in app.py:

OPENAI_API_KEY = "your_openai_api_key_here"

Setup & Run

Clone repository or copy files

Install dependencies

pip install -r requirements.txt


Set OpenAI API Key

Run Streamlit App

streamlit run app.py


Ngrok Live Share (optional, already integrated in code)

# Public URL printed in console

File Structure
/app.py               # Main Streamlit app
/ensemble_model.joblib # Saved model (auto-generated after first run)
/demo_data.csv        # Optional embedded CSV for demo mode

Usage

Upload CSV or use Demo Mode

Adjust Anomaly Detection Sensitivity using the slider

View Chart: Actual vs Predicted AC power

View Anomalies: Highlighted in red, with downloadable CSV

GPT Summary: Actionable insights displayed in the summary box

Demo Mode

If no CSV uploaded, app can use demo_data.csv with predefined anomalies for testing:

3 anomalies included

First 5 rows shown in GPT summary

Expected GPT output:

Energy data shows anomalies in row X with unusually high values.
Recommended actions: inspect equipment, verify sensor data, adjust operational parameters.

Extending the App

Add new models to VotingRegressor

Enhance anomaly detection with seasonal trends or thresholds

Improve GPT prompts for domain-specific recommendations

Add multi-file upload or API endpoints for automated data ingestion

Security / Notes

Do not commit your OpenAI API key to public repos

Use environment variables in production

Ensure CSV input columns are consistent with required format

Limit anomaly detection contamination based on dataset size

Contact

Author: Mustafa Arif

Email: info.alphawaveai@gmail.com

Project: Rayfield Systems Energy AI Dashboard
